{"version":3,"sources":["webpack://client/./src/Pages/CatalogPage/CatalogPageLayout/CatalogFilters/SizesFilters.js"],"names":["SizesFilters","sizes","values","setValues","openBtnSubmit","resetFilter","e","preventDefault","map","el","i","id","checked","includes","key","name","data-cy","onChange","value","Array","isArray","newValue","filter","handlerChangeFilter","variant","label","title","React"],"mappings":"8LAIA,MAAMA,EAAe,EACnBC,QAAQ,GACRC,SAAS,CAAED,MAAO,IAClBE,YAAY,SACZC,gBAAgB,YAyBd,EAAC,iBAAD,CACEC,YAtBiBC,IACnBA,EAAEC,iBACFJ,GAAU,kBAAKD,GAAN,IAAc,MAAQ,QAsB5BD,EAAMO,IAAI,CAACC,EAAIC,KACd,MAAMC,EAAKF,EAAGE,GACRC,EAAUV,EAAOD,MAAMY,SAASF,GACtC,OACE,EAAC,uBAAD,CAAiCG,IAAKH,GACpC,EAAC,IAAD,CACEG,IAAKH,EACLC,QAASA,EACTG,KAlCE,QAmCFC,UAAU,iBAAgBP,EAAGE,GAC7BM,SAAWX,GA7BK,EAACA,EAAGK,KAC9B,MAAMO,EAAQZ,EAAEM,QAChB,GAAc,OAAVM,EAAJ,CACA,GAAIA,EAAO,CACJC,MAAMC,QAAQlB,EAAOD,SACxBC,EAAOD,MAAQ,CAACC,EAAOD,QAEzB,MAAMoB,EAAWnB,EAAOD,MAAMqB,OAAQb,GAAOA,IAAOE,GACpDR,GAAU,kBAAKD,GAAN,IAAc,MAAQmB,UAE/BlB,GAAU,kBAAKD,GAAN,IAAc,MAAQ,IAAIA,EAAOD,MAAOU,MAEnDP,MAiB2BmB,CAAoBjB,EAAGK,GACxCa,QAAQ,QACRC,MAAOhB,EAAGiB,YASxB,EAAeC,OAAW3B","file":"static/js/83.655af058.chunk.js","sourcesContent":["import React from 'react';\nimport CheckBox from '../../../../Views/CheckBox';\nimport CatalogViews from '../../../../Views/CatalogViews';\n\nconst SizesFilters = ({\n  sizes = [],\n  values = { sizes: [] },\n  setValues = () => { },\n  openBtnSubmit = () => { },\n}) => {\n  const name = `sizes`;\n\n  const resetFilter = (e) => {\n    e.preventDefault();\n    setValues({ ...values, [name]: [] });\n  }\n\n  const handlerChangeFilter = (e, id) => {\n    const value = e.checked;\n    if (value === null) return;\n    if (value) {\n      if (!Array.isArray(values.sizes)) {\n        values.sizes = [values.sizes];\n      }\n      const newValue = values.sizes.filter((el) => el !== id);\n      setValues({ ...values, [name]: newValue });\n    } else {\n      setValues({ ...values, [name]: [...values.sizes, id] });\n    }\n    openBtnSubmit();\n  }\n\n  return (\n    <CatalogViews.SizesFilters\n      resetFilter={resetFilter}\n    >\n      {sizes.map((el, i) => {\n        const id = el.id;\n        const checked = values.sizes.includes(id);\n        return (\n          <CatalogViews.LayoutCheckBoxItem key={id}>\n            <CheckBox\n              key={id}\n              checked={checked}\n              name={name}\n              data-cy={`sizesCheckBox-${el.id}`}\n              onChange={(e) => handlerChangeFilter(e, id)}\n              variant=\"light\"\n              label={el.title}\n            ></CheckBox>\n          </CatalogViews.LayoutCheckBoxItem>\n        );\n      })}\n    </CatalogViews.SizesFilters>\n  );\n};\n\nexport default React.memo(SizesFilters);\n"],"sourceRoot":""}